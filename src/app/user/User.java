package app.user;

import app.order.Order;
import javafx.beans.property.IntegerProperty;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.StringProperty;
import javafx.beans.property.LongProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.SimpleLongProperty;
import java.time.LocalDate;

import java.sql.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "sm"
)
public class User implements java.io.Serializable {

    private LongProperty idUser;
    private StringProperty firstName;
    private StringProperty lastName;
    private StringProperty adresse;
    private StringProperty email;
    private StringProperty phone;
    private StringProperty login;
    private StringProperty password;
    private ObjectProperty<LocalDate> lastConnected;
    private IntegerProperty role;
    private Set<Order> orders = new HashSet<Order>(0);

    public User() {
        this.idUser = new SimpleLongProperty();
        this.firstName = new SimpleStringProperty();
        this.lastName = new SimpleStringProperty();
        this.adresse = new SimpleStringProperty();
        this.email = new SimpleStringProperty();
        this.phone = new SimpleStringProperty();
        this.login = new SimpleStringProperty();
        this.password = new SimpleStringProperty();
        this.lastConnected = new SimpleObjectProperty();
        this.role = new SimpleIntegerProperty();
    }

    public LongProperty idUserProperty() {
        return idUser;
    }

    public StringProperty firstNameProperty() {
        return firstName;
    }

    public StringProperty lastNameProperty() {
        return lastName;
    }

    public StringProperty adresseProperty() {
        return adresse;
    }

    public StringProperty emailProperty() {
        return email;
    }

    public StringProperty phoneProperty() {
        return phone;
    }

    public StringProperty loginProperty() {
        return login;
    }

    public StringProperty passwordProperty() {
        return password;
    }

    public IntegerProperty roleProperty() {
        return role;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id_user", unique = true, nullable = false)
    public Long getIdUser() {
        return this.idUser.get();
    }

    public void setIdUser(Long idUser) {
        this.idUser.set(idUser);
    }

    @Column(name = "first_name")
    public String getFirstName() {
        return this.firstName.get();
    }

    public void setFirstName(String firstName) {
        this.firstName.set(firstName);
    }

    @Column(name = "last_name")
    public String getLastName() {
        return this.lastName.get();
    }

    public void setLastName(String lastName) {
        this.lastName.set(lastName);
    }

    @Column(name = "adresse")
    public String getAdresse() {
        return this.adresse.get();
    }

    public void setAdresse(String adresse) {
        this.adresse.set(adresse);
    }

    @Column(name = "email")
    public String getEmail() {
        return this.email.get();
    }

    public void setEmail(String email) {
        this.email.set(email);
    }

    @Column(name = "phone")
    public String getPhone() {
        return this.phone.get();
    }

    public void setPhone(String phone) {
        this.phone.set(phone);
    }

    @Column(name = "login")
    public String getLogin() {
        return this.login.get();
    }

    public void setLogin(String login) {
        this.login.set(login);
    }

    @Column(name = "password")
    public String getPassword() {
        return this.password.get();
    }

    public void setPassword(String password) {
        this.password.set(password);
    }

    //@Temporal(TemporalType.DATE)
    @Column(name = "last_connected", length = 10)
    public Date getLastConnected() {
        return Date.valueOf(this.lastConnected.get());
    }

    public void setLastConnected(Date lastConnected) {
        this.lastConnected.set(lastConnected.toLocalDate());
    }

    @Column(name = "role")
    public Integer getRole() {
        return this.role.get();
    }

    public void setRole(Integer role) {
        this.role.set(role);
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Order> getOrders() {
        return this.orders;
    }

    public void setOrders(Set<Order> orders) {
        this.orders = orders;
    }

}
