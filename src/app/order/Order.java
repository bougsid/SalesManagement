package app.order;

import app.bill.Bill;
import app.customer.Customer;
import app.orderline.Orderline;
import app.user.User;
import javafx.beans.property.*;

import javax.persistence.*;
import java.sql.Date;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "sm"
)
public class Order implements java.io.Serializable {

    private LongProperty idOrder;
    private ObjectProperty<Bill> bill;
    private ObjectProperty<Customer> customer;
    private ObjectProperty<User> user;
    private ObjectProperty<LocalDate> creationDate;
    private ObjectProperty<LocalDate> shippingDate;
    private FloatProperty totalAmount;
    private FloatProperty paidAmount;
    private StringProperty state;
    private StringProperty note;
    private Set<Orderline> orderlines = new HashSet<Orderline>(0);

    public Order() {
        this.idOrder = new SimpleLongProperty();
        this.bill = new SimpleObjectProperty();
        this.customer = new SimpleObjectProperty();
        this.user = new SimpleObjectProperty();
        this.creationDate = new SimpleObjectProperty();
        this.shippingDate = new SimpleObjectProperty();
        this.totalAmount = new SimpleFloatProperty(0);
        this.paidAmount = new SimpleFloatProperty(0);
        this.state = new SimpleStringProperty();
        this.note = new SimpleStringProperty();
    }

    public LongProperty idOrderProperty() {
        return idOrder;
    }

    public FloatProperty totalAmountProperty() {
        return totalAmount;
    }

    public FloatProperty paidAmountProperty() {
        return paidAmount;
    }

    public StringProperty stateProperty() {
        return state;
    }

    public StringProperty noteProperty() {
        return note;
    }

    public ObjectProperty<Customer> customerProperty() {
        return customer;
    }

    public ObjectProperty<LocalDate> creationDateProperty() {
        return creationDate;
    }

    public ObjectProperty<LocalDate> shippingDateProperty() {
        return shippingDate;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id_order", unique = true, nullable = false)
    public Long getIdOrder() {
        return this.idOrder.get();
    }

    public void setIdOrder(Long idOrder) {
        this.idOrder.set(idOrder);
    }

    //@ManyToOne(fetch = FetchType.LAZY)
    @ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.MERGE, CascadeType.PERSIST})
    @JoinColumn(name = "id_bill")
    public Bill getBill() {
        return this.bill.get();
    }

    public void setBill(Bill bill) {
        this.bill.set(bill);
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_customer", nullable = false)
    public Customer getCustomer() {
        return this.customer.get();
    }

    public void setCustomer(Customer customer) {
        this.customer.set(customer);
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_user", nullable = true)
    public User getUser() {
        return this.user.get();
    }

    public void setUser(User user) {
        this.user.set(user);
    }

    //@Temporal(TemporalType.DATE)
    @Column(name = "creation_date", length = 10)
    public Date getCreationDate() {
        return Date.valueOf(this.creationDate.get());
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate.set(creationDate.toLocalDate());
    }

    //@Temporal(TemporalType.DATE)
    @Column(name = "shipping_date", length = 10)
    public Date getShippingDate() {
        return Date.valueOf(this.shippingDate.get());
    }

    public void setShippingDate(Date shippingDate) {
        this.shippingDate.set(shippingDate.toLocalDate());
    }

    @Column(name = "total_amount", precision = 12, scale = 0)
    public Float getTotalAmount() {
        return this.totalAmount.get();
    }

    public void setTotalAmount(Float totalAmount) {
        this.totalAmount.set(totalAmount);
    }

    @Column(name = "paid_amount", precision = 12, scale = 0)
    public Float getPaidAmount() {
        return this.paidAmount.get();
    }

    public void setPaidAmount(Float paidAmount) {
        this.paidAmount.set(paidAmount);
    }

    @Column(name = "state")
    public String getState() {
        return this.state.get();
    }

    public void setState(String state) {
        this.state.set(state);
    }

    @Column(name = "note")
    public String getNote() {
        return this.note.get();
    }

    public void setNote(String note) {
        this.note.set(note);
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "order", cascade = {CascadeType.ALL, CascadeType.MERGE, CascadeType.PERSIST})
    public Set<Orderline> getOrderlines() {
        return this.orderlines;
    }

    public void setOrderlines(Set<Orderline> orderlines) {
        this.orderlines = orderlines;
    }

    public void addOrderline(Orderline orderline) {
        this.orderlines.add(orderline);
    }

    public void removeOrderline(Orderline orderline) {
        this.orderlines.remove(orderline);
    }

//    @OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
//    public Set<Bill> getBills() {
//        return this.bills;
//    }
//
//    public void setBills(Set<Bill> bills) {
//        this.bills = bills;
//    }

}
